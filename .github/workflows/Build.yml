name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [11.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and lint/checkstyle
      run: |
        npm ci
        npm run build

#   UNCOMMENT FOR DEPLOYMENTS ON PUSH
#   deploy:
#     needs: ['build']
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - uses: actions/checkout@v2
#       - uses: akhileshns/heroku-deploy@v3.8.8
#         with:
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: ${{secrets.APP_NAME}}
#           heroku_email: ${{secrets.HEROKU_EMAIL}}
#           healthcheck: "https://${{secrets.APP_NAME}}.herokuapp.com/api/health"
#           checkstring: "Everything looks good ðŸ‘Œ"
#           rollbackonhealthcheckfailed: true
#         env:
#           HD_NODE_ENV: production
#           HD_PLATFORM_USED: discord
#           HD_DISCORD_BOT_TOKEN: ${{secrets.DISCORD_BOT_TOKEN}}
#           HD_DISCORD_BOT_CHANNEL_IDS: ${{secrets.DISCORD_BOT_CHANNEL_IDS}}
#           HD_ADMIN_SECRET: ${{secrets.ADMIN_SECRET}}
#           HD_JUDGE_SECRET: ${{secrets.JUDGE_SECRET}}
#           HD_SUPPORT_SECRET: ${{secrets.SUPPORT_SECRET}}
#           HD_SLACK_BOT_TOKEN: disabled
#           HD_SLACK_SIGNING_SECRET: disabled
#           HD_CHALLENGE_URL: ${{secrets.CHALLENGE_URL}}
#           HD_JOB_CHAT_URL: ${{secrets.JOB_CHAT_URL}}
#           HD_DB_SSL_DISABLED: ${{secrets.DB_SSL_DISABLED}}
